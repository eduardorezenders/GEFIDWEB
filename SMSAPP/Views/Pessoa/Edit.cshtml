@model EntidadesDAL.pessoa

@{
    ViewBag.Title = "SMSAPP";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-12 text-left">
            <h4>Contato</h4>
            @Html.ActionLink(" ", "Index", null, new { @class = "btn btn-default glyphicon glyphicon-hand-left", @title = "Voltar para lista" })
            <input type="submit" value="Salvar" class="btn btn-primary" title="Salvar contato" />
        </div>
    </div>
    <hr />

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idPessoa)

        <div class="form-group">
            @Html.LabelFor(model => model.nomeCompleto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nomeCompleto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nomeCompleto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dataNascimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cpf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cpf, new { htmlAttributes = new { @class = "form-control", @name = "cpf", @onkeypress = "return SomenteNumero(event)" } })
                @Html.ValidationMessageFor(model => model.cpf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idGenero, "Genêro", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idGenero", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idGenero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.facebook, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.facebook, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nomeCompleto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.whatsapp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.whatsapp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nomeCompleto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ativo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ativo)
                    @Html.ValidationMessageFor(model => model.ativo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-primary" title="Salvar contato" />
            </div>
        </div>*@
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        function SomenteNumero(e) {
            var tecla = (window.event) ? event.keyCode : e.which;
            if ((tecla > 47 && tecla < 58)) return true;
            else {
                if (tecla == 8 || tecla == 0) return true;
                else return false;
            }
        }
    </script>
}
